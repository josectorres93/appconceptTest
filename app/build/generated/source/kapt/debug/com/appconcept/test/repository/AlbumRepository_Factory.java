// Generated by Dagger (https://dagger.dev).
package com.appconcept.test.repository;

import com.appconcept.test.database.AlbumDao;
import com.appconcept.test.remotedata.RemoteDataSource;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class AlbumRepository_Factory implements Factory<AlbumRepository> {
  private final Provider<RemoteDataSource> remoteDataSourceProvider;

  private final Provider<AlbumDao> albumDaoProvider;

  public AlbumRepository_Factory(Provider<RemoteDataSource> remoteDataSourceProvider,
      Provider<AlbumDao> albumDaoProvider) {
    this.remoteDataSourceProvider = remoteDataSourceProvider;
    this.albumDaoProvider = albumDaoProvider;
  }

  @Override
  public AlbumRepository get() {
    return newInstance(remoteDataSourceProvider.get(), albumDaoProvider.get());
  }

  public static AlbumRepository_Factory create(Provider<RemoteDataSource> remoteDataSourceProvider,
      Provider<AlbumDao> albumDaoProvider) {
    return new AlbumRepository_Factory(remoteDataSourceProvider, albumDaoProvider);
  }

  public static AlbumRepository newInstance(RemoteDataSource remoteDataSource, AlbumDao albumDao) {
    return new AlbumRepository(remoteDataSource, albumDao);
  }
}
