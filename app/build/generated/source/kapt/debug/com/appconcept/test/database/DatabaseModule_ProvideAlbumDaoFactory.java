// Generated by Dagger (https://dagger.dev).
package com.appconcept.test.database;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class DatabaseModule_ProvideAlbumDaoFactory implements Factory<AlbumDao> {
  private final Provider<AppDatabase> databaseProvider;

  public DatabaseModule_ProvideAlbumDaoFactory(Provider<AppDatabase> databaseProvider) {
    this.databaseProvider = databaseProvider;
  }

  @Override
  public AlbumDao get() {
    return provideAlbumDao(databaseProvider.get());
  }

  public static DatabaseModule_ProvideAlbumDaoFactory create(
      Provider<AppDatabase> databaseProvider) {
    return new DatabaseModule_ProvideAlbumDaoFactory(databaseProvider);
  }

  public static AlbumDao provideAlbumDao(AppDatabase database) {
    return Preconditions.checkNotNullFromProvides(DatabaseModule.INSTANCE.provideAlbumDao(database));
  }
}
